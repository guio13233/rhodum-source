<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.rhodum.xyz/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Part" referent="RBX0">
		<Properties>
			<bool name="Anchored">true</bool>
			<float name="BackParamA">-0.5</float>
			<float name="BackParamB">0.5</float>
			<token name="BackSurface">0</token>
			<token name="BackSurfaceInput">0</token>
			<float name="BottomParamA">-0.5</float>
			<float name="BottomParamB">0.5</float>
			<token name="BottomSurface">0</token>
			<token name="BottomSurfaceInput">0</token>
			<int name="BrickColor">26</int>
			<CoordinateFrame name="CFrame">
				<X>-190</X>
				<Y>11.0000105</Y>
				<Z>139.000015</Z>
				<R00>-1</R00>
				<R01>1.90734863e-006</R01>
				<R02>7.27595761e-012</R02>
				<R10>1.90734863e-006</R10>
				<R11>1</R11>
				<R12>7.62939453e-006</R12>
				<R20>7.27595761e-012</R20>
				<R21>7.62939453e-006</R21>
				<R22>-1</R22>
			</CoordinateFrame>
			<bool name="CanCollide">true</bool>
			<bool name="DraggingV1">false</bool>
			<float name="Elasticity">0.5</float>
			<token name="FormFactor">0</token>
			<float name="Friction">0.300000012</float>
			<float name="FrontParamA">-0.5</float>
			<float name="FrontParamB">0.5</float>
			<token name="FrontSurface">0</token>
			<token name="FrontSurfaceInput">0</token>
			<float name="LeftParamA">-0.5</float>
			<float name="LeftParamB">0.5</float>
			<token name="LeftSurface">0</token>
			<token name="LeftSurfaceInput">0</token>
			<bool name="Locked">false</bool>
			<token name="Material">256</token>
			<string name="Name">RedStrays</string>
			<float name="Reflectance">0.5</float>
			<float name="RightParamA">-0.5</float>
			<float name="RightParamB">0.5</float>
			<token name="RightSurface">0</token>
			<token name="RightSurfaceInput">0</token>
			<Vector3 name="RotVelocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="TopParamA">-0.5</float>
			<float name="TopParamB">0.5</float>
			<token name="TopSurface">0</token>
			<token name="TopSurfaceInput">0</token>
			<float name="Transparency">0</float>
			<Vector3 name="Velocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<bool name="archivable">true</bool>
			<token name="shape">0</token>
			<Vector3 name="size">
				<X>2</X>
				<Y>2</Y>
				<Z>2</Z>
			</Vector3>
		</Properties>
		<Item class="Script" referent="RBX1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Red Strays</string>
				<ProtectedString name="Source">local debounce = false

function getPlayer(humanoid)
	-- find the owning player of a humanoid.
	local players = game.Players:children()
	for i = 1, #players do
		if players[i].Character ~= nil then
			if players[i].Character.Humanoid == humanoid then return players[i] end
		end
	end
	return nil
end


function displayMsg(humanoid)

	local torso = humanoid.Parent.Torso


	local player = getPlayer(humanoid)
	if player ~= nil then
		local message = Instance.new(&quot;Message&quot;)
		message.Text = &quot;Red strays of ruined springs&quot;
		message.Parent = player
		wait(5)
		message.Parent = nil

		if player.Backpack:findFirstChild(&quot;Wild Leaves&quot;) == nil then
			-- out of order!
			humanoid.Health = 0
		end

		if player.Backpack:findFirstChild(&quot;Red Strays&quot;) == nil then
			local h = Instance.new(&quot;HopperBin&quot;)
			h.Name = &quot;Red Strays&quot;
			h.Parent = player.Backpack
		end
	end


end

function onTouched(hit)
	local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
	if humanoid~=nil and debounce == false then
		debounce = true
		displayMsg(humanoid)
		debounce = false
	end
end


script.Parent.Touched:connect(onTouched)</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
	<Item class="Part" referent="RBX2">
		<Properties>
			<bool name="Anchored">true</bool>
			<float name="BackParamA">-0.5</float>
			<float name="BackParamB">0.5</float>
			<token name="BackSurface">0</token>
			<token name="BackSurfaceInput">0</token>
			<float name="BottomParamA">-0.5</float>
			<float name="BottomParamB">0.5</float>
			<token name="BottomSurface">0</token>
			<token name="BottomSurfaceInput">0</token>
			<int name="BrickColor">26</int>
			<CoordinateFrame name="CFrame">
				<X>-9</X>
				<Y>59.4000168</Y>
				<Z>-44</Z>
				<R00>-1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>-1</R22>
			</CoordinateFrame>
			<bool name="CanCollide">true</bool>
			<bool name="DraggingV1">false</bool>
			<float name="Elasticity">0.5</float>
			<token name="FormFactor">0</token>
			<float name="Friction">0.300000012</float>
			<float name="FrontParamA">-0.5</float>
			<float name="FrontParamB">0.5</float>
			<token name="FrontSurface">0</token>
			<token name="FrontSurfaceInput">0</token>
			<float name="LeftParamA">-0.5</float>
			<float name="LeftParamB">0.5</float>
			<token name="LeftSurface">0</token>
			<token name="LeftSurfaceInput">0</token>
			<bool name="Locked">false</bool>
			<token name="Material">256</token>
			<string name="Name">DeadDreams</string>
			<float name="Reflectance">0.5</float>
			<float name="RightParamA">-0.5</float>
			<float name="RightParamB">0.5</float>
			<token name="RightSurface">0</token>
			<token name="RightSurfaceInput">0</token>
			<Vector3 name="RotVelocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="TopParamA">-0.5</float>
			<float name="TopParamB">0.5</float>
			<token name="TopSurface">0</token>
			<token name="TopSurfaceInput">0</token>
			<float name="Transparency">0</float>
			<Vector3 name="Velocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<bool name="archivable">true</bool>
			<token name="shape">0</token>
			<Vector3 name="size">
				<X>2</X>
				<Y>2</Y>
				<Z>2</Z>
			</Vector3>
		</Properties>
		<Item class="Script" referent="RBX3">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Dead Dreams</string>
				<ProtectedString name="Source">local debounce = false

function getPlayer(humanoid)
	-- find the owning player of a humanoid.
	local players = game.Players:children()
	for i = 1, #players do
		if players[i].Character ~= nil then
			if players[i].Character.Humanoid == humanoid then return players[i] end
		end
	end
	return nil
end


function displayMsg(humanoid)

	local torso = humanoid.Parent.Torso


	local player = getPlayer(humanoid)
	if player ~= nil then
		local message = Instance.new(&quot;Message&quot;)
		message.Text = &quot;Dead dreams of days forsaken&quot;
		message.Parent = player
		wait(5)
		message.Parent = nil
	
		if player.Backpack:findFirstChild(&quot;Dead Dreams&quot;) == nil then
			local h = Instance.new(&quot;HopperBin&quot;)
			h.Name = &quot;Dead Dreams&quot;
			h.Parent = player.Backpack
		end
	end


end

function onTouched(hit)
	local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
	if humanoid~=nil and debounce == false then
		debounce = true
		displayMsg(humanoid)
		debounce = false
	end
end


script.Parent.Touched:connect(onTouched)</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
	<Item class="Part" referent="RBX4">
		<Properties>
			<bool name="Anchored">true</bool>
			<float name="BackParamA">-0.5</float>
			<float name="BackParamB">0.5</float>
			<token name="BackSurface">0</token>
			<token name="BackSurfaceInput">0</token>
			<float name="BottomParamA">-0.5</float>
			<float name="BottomParamB">0.5</float>
			<token name="BottomSurface">0</token>
			<token name="BottomSurfaceInput">0</token>
			<int name="BrickColor">26</int>
			<CoordinateFrame name="CFrame">
				<X>213</X>
				<Y>1.39999998</Y>
				<Z>218</Z>
				<R00>-1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>-1</R22>
			</CoordinateFrame>
			<bool name="CanCollide">true</bool>
			<bool name="DraggingV1">false</bool>
			<float name="Elasticity">0.5</float>
			<token name="FormFactor">0</token>
			<float name="Friction">0.300000012</float>
			<float name="FrontParamA">-0.5</float>
			<float name="FrontParamB">0.5</float>
			<token name="FrontSurface">0</token>
			<token name="FrontSurfaceInput">0</token>
			<float name="LeftParamA">-0.5</float>
			<float name="LeftParamB">0.5</float>
			<token name="LeftSurface">0</token>
			<token name="LeftSurfaceInput">0</token>
			<bool name="Locked">false</bool>
			<token name="Material">256</token>
			<string name="Name">BlindBuds</string>
			<float name="Reflectance">0.5</float>
			<float name="RightParamA">-0.5</float>
			<float name="RightParamB">0.5</float>
			<token name="RightSurface">0</token>
			<token name="RightSurfaceInput">0</token>
			<Vector3 name="RotVelocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="TopParamA">-0.5</float>
			<float name="TopParamB">0.5</float>
			<token name="TopSurface">0</token>
			<token name="TopSurfaceInput">0</token>
			<float name="Transparency">0</float>
			<Vector3 name="Velocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<bool name="archivable">true</bool>
			<token name="shape">0</token>
			<Vector3 name="size">
				<X>2</X>
				<Y>2</Y>
				<Z>2</Z>
			</Vector3>
		</Properties>
		<Item class="Script" referent="RBX5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Blind Buds</string>
				<ProtectedString name="Source">local debounce = false

function getPlayer(humanoid)
	-- find the owning player of a humanoid.
	local players = game.Players:children()
	for i = 1, #players do
		if players[i].Character ~= nil then
			if players[i].Character.Humanoid == humanoid then return players[i] end
		end
	end
	return nil
end


function displayMsg(humanoid)

	local torso = humanoid.Parent.Torso


	local player = getPlayer(humanoid)
	if player ~= nil then
		local message = Instance.new(&quot;Message&quot;)
		message.Text = &quot;Blind buds that snows have shaken&quot;
		message.Parent = player
		wait(5)
		message.Parent = nil

		if player.Backpack:findFirstChild(&quot;Dead Dreams&quot;) == nil then
			-- out of order!
			humanoid.Health = 0
		end
	
		if player.Backpack:findFirstChild(&quot;Blind Buds&quot;) == nil then
			local h = Instance.new(&quot;HopperBin&quot;)
			h.Name = &quot;Blind Buds&quot;
			h.Parent = player.Backpack
		end
	end


end

function onTouched(hit)
	local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
	if humanoid~=nil and debounce == false then
		debounce = true
		displayMsg(humanoid)
		debounce = false
	end
end


script.Parent.Touched:connect(onTouched)</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
	<Item class="Part" referent="RBX6">
		<Properties>
			<bool name="Anchored">false</bool>
			<float name="BackParamA">-0.5</float>
			<float name="BackParamB">0.5</float>
			<token name="BackSurface">0</token>
			<token name="BackSurfaceInput">0</token>
			<float name="BottomParamA">-0.5</float>
			<float name="BottomParamB">0.5</float>
			<token name="BottomSurface">4</token>
			<token name="BottomSurfaceInput">0</token>
			<int name="BrickColor">199</int>
			<CoordinateFrame name="CFrame">
				<X>-181</X>
				<Y>12.3999996</Y>
				<Z>-182.5</Z>
				<R00>-1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>-1</R22>
			</CoordinateFrame>
			<bool name="CanCollide">true</bool>
			<bool name="DraggingV1">false</bool>
			<float name="Elasticity">0.5</float>
			<token name="FormFactor">1</token>
			<float name="Friction">0.300000012</float>
			<float name="FrontParamA">-0.5</float>
			<float name="FrontParamB">0.5</float>
			<token name="FrontSurface">0</token>
			<token name="FrontSurfaceInput">0</token>
			<float name="LeftParamA">-0.5</float>
			<float name="LeftParamB">0.5</float>
			<token name="LeftSurface">0</token>
			<token name="LeftSurfaceInput">0</token>
			<bool name="Locked">false</bool>
			<token name="Material">256</token>
			<string name="Name">Door</string>
			<float name="Reflectance">0</float>
			<float name="RightParamA">-0.5</float>
			<float name="RightParamB">0.5</float>
			<token name="RightSurface">0</token>
			<token name="RightSurfaceInput">0</token>
			<Vector3 name="RotVelocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<float name="TopParamA">-0.5</float>
			<float name="TopParamB">0.5</float>
			<token name="TopSurface">3</token>
			<token name="TopSurfaceInput">0</token>
			<float name="Transparency">0</float>
			<Vector3 name="Velocity">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
			</Vector3>
			<bool name="archivable">true</bool>
			<token name="shape">1</token>
			<Vector3 name="size">
				<X>6</X>
				<Y>12</Y>
				<Z>1</Z>
			</Vector3>
		</Properties>
		<Item class="Script" referent="RBX7">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Door</string>
				<ProtectedString name="Source">local debounce = false

function getPlayer(humanoid)
	-- find the owning player of a humanoid.
	local players = game.Players:children()
	for i = 1, #players do
		if players[i].Character ~= nil then
			if players[i].Character.Humanoid == humanoid then return players[i] end
		end
	end
	return nil
end


function displayMsg(humanoid)

	local torso = humanoid.Parent.Torso


	local player = getPlayer(humanoid)
	if player ~= nil then
		
	
		if player.Backpack:findFirstChild(&quot;Dead Dreams&quot;) ~= nil and
			player.Backpack:findFirstChild(&quot;Blind Buds&quot;) ~= nil and
			player.Backpack:findFirstChild(&quot;Wild Leaves&quot;) ~= nil and
			player.Backpack:findFirstChild(&quot;Red Strays&quot;) ~= nil then


			script.Parent.CanCollide = false
			script.Parent.Transparency = .5
			wait(5)
			script.Parent.CanCollide = true
			script.Parent.Transparency = 0
	
			wait(90)
		else
			local message = Instance.new(&quot;Message&quot;)
			message.Text = &quot;Dead dreams of days forsaken...&quot;
			message.Parent = player
			wait(5)
			message.Parent = nil
		end
	end


end

function onTouched(hit)
	local humanoid = hit.Parent:findFirstChild(&quot;Humanoid&quot;)
	if humanoid~=nil and debounce == false then
		debounce = true
		displayMsg(humanoid)
		debounce = false
	end
end


script.Parent.Touched:connect(onTouched)</ProtectedString>
				<bool name="archivable">true</bool>
			</Properties>
		</Item>
	</Item>
</roblox>